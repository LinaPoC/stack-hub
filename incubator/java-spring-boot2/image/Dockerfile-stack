FROM registry.access.redhat.com/ubi8/ubi

LABEL vendor="Kabanero" \
    name="kabanero/java-spring-boot2" \
    version="0.2.10" \
    summary="Image for Kabanero java-spring-boot2 development" \
    description="This image contains the Kabanero development stack for the java-spring-boot2 collection"

USER root

RUN groupadd --gid 1000 java_group \
  && useradd --uid 1000 --gid java_group --shell /bin/bash --create-home java_user

RUN yum upgrade --disableplugin=subscription-manager -y \
   && yum clean --disableplugin=subscription-manager packages \
   && echo 'Finished installing dependencies'

# Dependency install
RUN yum install --disableplugin=subscription-manager -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm \
   && yum install --disableplugin=subscription-manager -y curl unzip xmlstarlet

# java8 install
RUN yum install --disableplugin=subscription-manager -y wget ca-certificates
ENV JAVA_VERSION 1.8.0_sr5fp37

RUN set -eux; \
    ESUM='51f6600dcc51c238bd4fbed73521e225094d7afa9afa2c8fb35ea78519a71930'; \
    YML_FILE='sdk/linux/x86_64/index.yml'; \
    BASE_URL="https://public.dhe.ibm.com/ibmdl/export/pub/systems/cloud/runtimes/java/meta/"; \
    wget -q -U UA_IBM_JAVA_Docker -O /tmp/index.yml ${BASE_URL}/${YML_FILE}; \
    JAVA_URL=$(sed -n '/^'${JAVA_VERSION}:'/{n;s/\s*uri:\s//p}'< /tmp/index.yml); \
    wget -q -U UA_IBM_JAVA_Docker -O /tmp/ibm-java.bin ${JAVA_URL}; \
    echo "${ESUM}  /tmp/ibm-java.bin" | sha256sum -c -; \
    echo "INSTALLER_UI=silent" > /tmp/response.properties; \
    echo "USER_INSTALL_DIR=/opt/ibm/java" >> /tmp/response.properties; \
    echo "LICENSE_ACCEPTED=TRUE" >> /tmp/response.properties; \
    mkdir -p /opt/ibm; \
    chmod +x /tmp/ibm-java.bin; \
    /tmp/ibm-java.bin -i silent -f /tmp/response.properties; \
    rm -f /tmp/response.properties; \
    rm -f /tmp/index.yml; \
    rm -f /tmp/ibm-java.bin;

ENV JAVA_HOME=/opt/ibm/java/jre \
    PATH=/opt/ibm/java/bin:$PATH \
IBM_JAVA_OPTIONS="-XX:+UseContainerSupport"

# Maven install
   ARG MAVEN_VERSION=3.6.2
   ARG USER_HOME_DIR="/root"
   ARG SHA=d941423d115cd021514bfd06c453658b1b3e39e6240969caf4315ab7119a77299713f14b620fb2571a264f8dff2473d8af3cb47b05acf0036fc2553199a5c1ee
   ARG BASE_URL=https://archive.apache.org/dist/maven/maven-3/${MAVEN_VERSION}/binaries/

 RUN mkdir -p /usr/share/maven /usr/share/maven/ref \
   && curl -fsSL -o /tmp/apache-maven.tar.gz ${BASE_URL}/apache-maven-${MAVEN_VERSION}-bin.tar.gz \
   && echo "${SHA}  /tmp/apache-maven.tar.gz" | sha512sum -c - \
   && tar -xzf /tmp/apache-maven.tar.gz -C /usr/share/maven --strip-components=1 \
   && rm -f /tmp/apache-maven.tar.gz \
   && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn

 ENV MAVEN_HOME /usr/share/maven
 ENV MAVEN_CONFIG "$USER_HOME_DIR/.m2"

COPY ./LICENSE /licenses/

COPY ./project /project
COPY ./config /config
COPY ./mvn-stack-settings.xml /usr/share/maven/conf/settings.xml
COPY ./mvn-stack-settings.xml /project/mvn-stack-settings.xml

# OSGI core for version range processing
RUN  /project/util/check_version build

WORKDIR /project
RUN mvn -B -N io.takari:maven:wrapper -Dmaven=$(mvn help:evaluate -Dexpression=maven.version -q -DforceStdout)

WORKDIR /project/user-app
RUN mkdir -p /mvn/repository
RUN chown -R java_user:java_group /project
RUN chown -R java_user:java_group /config
RUN chown -R java_user:java_group /mvn

USER java_user
ENV MAVEN_CONFIG "~/.m2"

ENV APPSODY_USER_RUN_AS_LOCAL=true
ENV APPSODY_PROJECT_DIR="/project"

ENV APPSODY_MOUNTS=".:/project/user-app;~/.m2/repository:/mvn/repository"
ENV APPSODY_DEPS=

ENV APPSODY_WATCH_DIR="/project/user-app/src"
ENV APPSODY_WATCH_IGNORE_DIR=""
ENV APPSODY_WATCH_REGEX=""

ENV APPSODY_RUN="/project/java-spring-boot2-build.sh run"
ENV APPSODY_RUN_ON_CHANGE="/project/java-spring-boot2-build.sh recompile"
ENV APPSODY_RUN_KILL=false

ENV APPSODY_DEBUG="/project/java-spring-boot2-build.sh debug"
ENV APPSODY_DEBUG_ON_CHANGE=""
ENV APPSODY_DEBUG_KILL=false

ENV APPSODY_TEST="/project/java-spring-boot2-build.sh test"
ENV APPSODY_TEST_ON_CHANGE=""
ENV APPSODY_TEST_KILL=true

ENV PORT=8080

EXPOSE 8080
EXPOSE 5005
EXPOSE 35729
ENTRYPOINT ["/project/java-spring-boot2-build.sh", "run"]
